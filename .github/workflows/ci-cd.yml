name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repo
      - name: Checkout code
        uses: actions/checkout@v2
        
      # Configure AWS credentials using GitHub secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Log in to ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build Docker images for each service
      - name: Build Docker image for agent-service
        run: |
          cd services/agent-service/src
          docker build -t agent-service .
          docker tag agent-service:latest 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/agentservice
          docker push 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/agentservice

      - name: Build Docker image for insurance-service
        run: |
          cd services/insurance-service/src
          docker build -t insurance-service .
          docker tag insurance-service:latest 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/insuranceservice
          docker push 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/insuranceservice

      - name: Build Docker image for notification-service
        run: |
          cd services/notification-service/src
          docker build -t notification-service .
          docker tag notification-service:latest 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/notificationservice
          docker push 306489597667.dkr.ecr.ap-southeast-1.amazonaws.com/notificationservice

      # Deploy to EKS
      - name: Deploy to EKS
        run: |
          aws eks --region ap-southeast-1 update-kubeconfig --name MoonAgentTracker
          
      # Apply Deployment and Service YAML for agent-service   
      - name: Deploy agent-service to EKS
        run: |
          kubectl apply -f services/agent-service/kubernetes/agent-deployment.yaml
          kubectl apply -f services/agent-service/kubernetes/agent-service.yaml

      # Apply Deployment and Service YAML for insurance-service
      - name: Deploy insurance-service to EKS
        run: |
          kubectl apply -f services/insurance-service/kubernetes/insurance-deployment.yaml
          kubectl apply -f services/insurance-service/kubernetes/insurance-service.yaml

      # Apply Deployment and Service YAML for notification-service
      - name: Deploy notification-service to EKS
        run: |
          kubectl apply -f services/notification-service/kubernetes/notification-deployment.yaml
          kubectl apply -f services/notification-service/kubernetes/notification-service.yaml

      # Check the deployment status for all services
      - name: Check Deployment Status
        run: |
          kubectl get deployments
          kubectl get pods
          kubectl get svc
